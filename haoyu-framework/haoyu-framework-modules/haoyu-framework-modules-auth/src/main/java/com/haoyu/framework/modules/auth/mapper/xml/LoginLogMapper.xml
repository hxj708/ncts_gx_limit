<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.haoyu.framework.modules.auth.mapper.LoginLogMapper">

    <!-- 通用查询映射结果 -->
    <resultMap id="BaseResultMap" type="com.haoyu.framework.modules.auth.entity.LoginLog">
        <result column="ID" property="id"/>
        <result column="CREATE_USER" property="createUser"/>
        <result column="CREATE_TIME" property="createTime"/>
        <result column="UPDATE_USER" property="updateUser"/>
        <result column="UPDATE_TIME" property="updateTime"/>
        <result column="IS_DELETED" property="isDeleted"/>
        <result column="VERSION" property="version"/>
        <result column="USER_ID" property="userId"/>
        <result column="SESSION_ID" property="sessionId"/>
        <result column="IP_ADDRESS" property="ipAddress"/>
        <result column="OS" property="os"/>
    </resultMap>
    <resultMap id="listResultMap" type="java.util.Map">
        <id column="ID" property="id" jdbcType="VARCHAR"/>
        <result column="CREATE_USER" property="createUser"/>
        <result column="CREATE_TIME" property="createTime"/>
        <result column="UPDATE_USER" property="updateUser"/>
        <result column="UPDATE_TIME" property="updateTime"/>
        <result column="IS_DELETED" property="isDeleted"/>
        <result column="VERSION" property="version"/>
        <result column="USER_ID" property="userId" jdbcType="VARCHAR"/>
        <result column="USER_NAME" property="userName" jdbcType="VARCHAR"/>
        <result column="REAL_NAME" property="realName" jdbcType="VARCHAR"/>
        <result column="PAPERWORK_NO" property="paperworkNo" jdbcType="VARCHAR"/>
        <result column="SESSION_ID" property="sessionId" jdbcType="VARCHAR"/>
        <result column="IP_ADDRESS" property="ipAddress" jdbcType="VARCHAR"/>
        <result column="OS" property="os" jdbcType="VARCHAR"/>
    </resultMap>


    <!-- 通用查询结果列 -->
    <sql id="Base_Column_List">
        ID,
        CREATE_USER,
        CREATE_TIME,
        UPDATE_USER,
        UPDATE_TIME,
        IS_DELETED,
        VERSION,
        USER_ID, SESSION_ID, IP_ADDRESS, OS
    </sql>


    <sql id="BaseSelectSql">
        select t.ID
             , t.CREATE_USER
             , t.CREATE_TIME
             , t.UPDATE_USER
             , t.UPDATE_TIME
             , t.IS_DELETED
             , t.VERSION
             , t.USER_ID
             , t.SESSION_ID
             , t.IP_ADDRESS
             , t.OS
        from ipanther_login_log t
    </sql>

    <sql id="BaseWhereSql">
        <where>
            <choose>
                <when test="cm.isDeleted != null and cm.isDeleted != ''">
                    and t.IS_DELETED = #{cm.isDeleted}
                </when>
                <otherwise>
                    and t.IS_DELETED = 'N'
                </otherwise>
            </choose>
            <if test="cm.ids != null">
                and t.ID in
                <foreach collection="cm.ids" open="(" close=")" item="item" separator=",">
                    #{item}
                </foreach>
            </if>
            <if test="cm.userId != null and cm.userId != ''">
                and t.USER_ID = #{cm.userId}
            </if>
            <if test="cm.sessionId != null and cm.sessionId != ''">
                and t.SESSION_ID = #{cm.sessionId}
            </if>
            <if test="cm.ipAddress != null and cm.ipAddress != ''">
                and t.IP_ADDRESS = #{cm.ipAddress}
            </if>
            <if test="cm.os != null and cm.os != ''">
                and t.OS = #{cm.os}
            </if>
        </where>
    </sql>

    <!-- 根据ID查询单条记录，用于灵活编写复杂SQL, 如子查询、关联查询等，如果是模块简单只需要单表，则调用mybatis plus自带的selectById -->
    <select id="selectByEntityId" resultMap="BaseResultMap" parameterType="java.lang.String">
        <include refid="BaseSelectSql"/>
        where t.ID = #{id,jdbcType=VARCHAR}
    </select>

    <select id="selectByMap" resultMap="BaseResultMap">
        <include refid="BaseSelectSql"/>
        <include refid="BaseWhereSql"/>
        order by t.id
    </select>

    <delete id="deleteByRequestParam" parameterType="java.util.Map">
        delete
        from IPANTHER_LOGIN_LOG
        where CREATE_TIME &gt;= to_date('${startTime}', 'yyyy-mm-dd hh24:mi:ss')
          and CREATE_TIME &lt;= to_date('${endTime}', 'yyyy-mm-dd hh24:mi:ss')
    </delete>

    <update id="deleteByLogout" parameterType="com.haoyu.framework.modules.auth.entity.LoginLog">
        update IPANTHER_LOGIN_LOG
        <set>
            <if test="userId != null">
                USER_ID = #{userId,jdbcType=VARCHAR},
            </if>
            <if test="sessionId != null">
                SESSION_ID = #{sessionId,jdbcType=VARCHAR},
            </if>
            <if test="ipAddress != null">
                IP_ADDRESS = #{ipAddress,jdbcType=VARCHAR},
            </if>
            <if test="os != null">
                OS = #{os,jdbcType=VARCHAR},
            </if>
            <if test="createUser != null">
                CREATE_USER = #{createUser,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateUser != null">
                UPDATE_USER = #{updateUser,jdbcType=VARCHAR},
            </if>
            <if test="updateTime != null">
                UPDATE_TIME = #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="isDeleted != null">
                IS_DELETED = #{isDeleted,jdbcType=CHAR},
            </if>
            VERSION = VERSION + 1
        </set>
        where USER_ID = #{userId,jdbcType=VARCHAR} and SESSION_ID = #{sessionId,jdbcType=VARCHAR}
    </update>

    <select id="selectByLoginLog" resultMap="BaseResultMap" parameterType="com.haoyu.framework.modules.auth.entity.LoginLog">
        select
        ID, USER_ID, SESSION_ID, IP_ADDRESS, OS, CREATE_USER, CREATE_TIME, UPDATE_USER, UPDATE_TIME,
        IS_DELETED, VERSION
        from IPANTHER_LOGIN_LOG
        <where>
            AND IS_DELETED = 'N'
            <if test="userId != null">
                AND USER_ID = #{userId,jdbcType=VARCHAR}
            </if>
            <if test="sessionId != null">
                AND SESSION_ID = #{sessionId,jdbcType=VARCHAR}
            </if>
            <if test="ipAddress != null">
                AND IP_ADDRESS = #{ipAddress,jdbcType=VARCHAR}
            </if>
            <if test="os != null">
                AND OS = #{os,jdbcType=VARCHAR}
            </if>
            <if test="isDeleted != null">
                AND IS_DELETED = #{isDeleted,jdbcType=CHAR}
            </if>
            <if test="id != null">
                AND ID = #{id,jdbcType=VARCHAR}
            </if>
        </where>
    </select>

</mapper>
